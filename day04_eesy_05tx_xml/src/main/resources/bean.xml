<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="accountService" class="com.cui.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>

    <bean id="accountDao" class="com.cui.dao.impl.AccountDaoImpl">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <constructor-arg name="url" value="jdbc:mysql://192.168.1.5:3306/spring"></constructor-arg>
        <constructor-arg name="username" value="root"></constructor-arg>
        <constructor-arg name="password" value="123456"></constructor-arg>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
    </bean>

    <!-- Spring中基于XML声明式事务控制配置步骤 -->
    <!--
      1. 配置事务管理器
      2. 配置事务的通知，此时我们需要导入事务的约束，tx名称空间和约束
          使用tx:advice标签配置事务通知
              属性：
                 id：给事务通知起一个唯一标识
                 transaction-manager：给事务通知提供一个事务管理器引用
      3. 配置AOP中的通用切入点表达式
      4. 建立事务通知和切入点表达式的对应关系
      5. 配置事务的属性：在事务的通知tx:advice标签内部
    -->

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置事务的通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--
            配置事务的属性
            isolation：指定事务的隔离级别，默认DEFAULT，表示使用数据库默认的隔离级别。
            propagation：指定事务的传播行为，默认REQUIRED，表示一定会有事务，增删改的选择，查询可以选择SUPPORTS。
            read-only：指定事务是否只读。只有查询方法才能设置为true，默认是false，表示读写。
            timeout：指定事务的超时时间，默认值是-1，表示永不超时。如果指定了数值，以秒为单位。
            rollback-for：指定一个异常，当产生该异常时，事务回滚；产生其他异常时，事务不回滚。没有默认值，表示任何异常都回滚。
            no-rollback-for：指定一个异常，当产生该异常时，事务不回滚；产生其他异常时，事务回滚。没有默认值，表示任何异常都回滚。
        -->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>

    <!-- 配置AOP -->
    <aop:config>
        <!-- 配置切入点表达式 -->
        <aop:pointcut id="pt1" expression="execution(* com.cui.service.impl.*.*(..))"></aop:pointcut>
        <!-- 建立事务通知和切入点表达式的对应关系 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>
</beans>