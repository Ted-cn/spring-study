<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 配置SpringIOC，把service对象配置进来 -->
    <bean id="accountService" class="com.cui.service.impl.AccountServiceImpl"></bean>

    <!--
        Spring中基于XML的AOP配置步骤：
        1. 把通知Bean也交给Spring来管理
        2. 使用<aop:config>标签表明开始AOP配置
        3. 使用<aop:aspect>标签表明配置切面
            id属性：给切面提供一个唯一标识
            ref属性：指定通知类bean的id
        4. 在<aop:aspect>标签的内部使用对应标签来配置通知的类型
            aop:before：表示前置通知
            method属性：指定通知类的哪个方法是前置通知
            pointcut属性：指定切入点表达式，该表达式的含义是对业务层中哪些方法增强

        切入点表达式的写法：
            关键字：execution(expression)
            表达式：
                访问修改符 返回值 包名.类名.方法名（参数列表）
                public void com.cui.service.impl.AccountServiceImpl.saveAccount()
            访问修饰符可以省略
                void com.cui.service.impl.AccountServiceImpl.saveAccount()
            返回值可以使用通配符，表示任意返回值
                * com.cui.service.impl.AccountServiceImpl.saveAccount()
            包名可以使用通配符，表示任意包，但是有几级包，就要写几个*
                * *.*.*.*.AccountServiceImpl.saveAccount()
            包名可以使用..表示当前包及其子包
                * *..AccountServiceImpl.saveAccount()
            类名和方法名都可以使用通配符
                * *..*.*()
            参数列表可以使用..表示任意参数
                * *..*.*(..)
                
           实际开发中切入点表达式的通常写法：切到业务层实现类下所有的方法
               * com.cui.service.impl.*.*(..)
    -->
    <!-- 配置Logger类 -->
    <bean id="logger" class="com.cui.utils.Logger"></bean>

    <aop:config>
        <aop:aspect id="logAdvice" ref="logger">
            <aop:before method="printLog" pointcut="execution(* com.cui.service.impl.*.*(..))"></aop:before>
        </aop:aspect>
    </aop:config>
</beans>